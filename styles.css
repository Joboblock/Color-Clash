html, body {
    height: 100%;
    margin: 0;
}

:root {
    /* Neutral board color used by cells and UI chrome */
    --cell-bg: #e7eddb;
}

/* Base body layout and font */
body {
    font-family: 'Nunito', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #333;
    transition: background-color var(--delay-animation);
}

/* #region Menu Styles */
/* Main Menu Overlay */
.menu {
    position: fixed;
    inset: 0;
    width: 100vw;
    height: 100dvh; /* dynamic viewport height for modern browsers (Doesn't actualy work :c ) */
    display: flex;
    justify-content: center;
    align-items: center;
    background: rgba(0,0,0,0.45);
    z-index: 10;
}

/* New flex column container holding header + menu */
.menu-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 32px; /* distance between header and menu */
}

/* Header above the menu */
.game-header-panel {
    background: rgba(231, 237, 219, 0.5);
    border-radius: 16px;
    padding: 10px 22px;
    box-shadow: 0 6px 20px rgba(0,0,0,0.25);
    font-weight: 800;
    color: #222;
    font-size: 2.5rem;
    backdrop-filter: blur(4px);
}

.menu-panel {
    width: min(680px, 90vmin);
    background: rgba(231, 237, 219, 0.5); /* add same transparency */
    border-radius: 22px;
    padding: 24px;
    box-shadow: 0 8px 30px rgba(0,0,0,0.45);
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: stretch;
    backdrop-filter: blur(4px); /* optional: smooths underlying content */
}

.menu-title {
    margin: 0;
    font-size: 2rem;
    text-align: center;
    padding: 6px 0;
}

.control-row {
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: flex-start;
}

.control-row label {
    width: 95px;
    font-weight: 600;
}

.control-row input[type="range"] {
    flex: 1 1 auto;
}

.control-row input[type="number"] {
    width: 72px;
    padding: 6px 8px;
    border-radius: 8px;
    border: 1px solid rgba(0,0,0,0.12);
    background: white;
}

/* Arrange the Grid Size row horizontally and push color box to the right */
.grid-size-row {
    flex-direction: row;
    align-items: center;
    gap: 12px;
}

.grid-size-row label {
    flex: 0 0 auto;
    margin-left: auto; /* push label+input group to right */
}

.grid-size-row #menuGridSize {
    flex: 0 0 auto;
}

/* Ensure the color cycler is leftmost */
.grid-size-row .menu-color-box { order: 0; }
.grid-size-row label { order: 1; }
.grid-size-row #menuGridSize { order: 2; }

/* Align the color cycler horizontally with the first player slider box */
.grid-size-row .menu-color-box {
    /* left offset equals slider's left border (1px) + padding-left (8px) */
    margin-left: calc(1px + 8px);
}

.menu-color-box {
    /* Match a single slider box width: (100% - slider border*2 - slider padding*2 - gap*(n-1)) / n */
    /* Here n=8, gap=8px, padding=8px, border=1px */
    width: calc((100% - 2px - 16px - 56px) / 8);
    aspect-ratio: 1 / 1; /* always square */
    border-radius: 25%;
    border: 2px solid rgba(255,255,255,0.6);
    box-shadow: 0 4px 10px rgba(0,0,0,0.12);
    background-color: var(--menu-outer-color, var(--cell-green)); /* default (green) */
    transition: background-color var(--delay-animation);
    cursor: pointer;
    position: relative;
    box-sizing: border-box;
}

.menu-color-box:focus-visible {
    outline: 3px solid rgba(0,0,0,0.25);
    outline-offset: 2px;
}

.menu-color-box::after {
    content: '';
    position: absolute;
    /* Inner circle inset proportional to box size to keep ring thickness consistent */
    inset: 18%;
    border-radius: 50%;
    background: var(--menu-inner-color, var(--inner-green)); /* updated from JS */
    transition: transform var(--delay-animation), background-color var(--delay-animation);
}

/* Center only the player slider within its control row */
#playerBoxSlider {
    align-self: center;  /* overrides parent's flex alignment */
}

.menu-actions {
    display: flex;
    gap: 8px;
    justify-content: center;
    margin-top: 6px;
}

.btn {
    background: #5f95d5;
    color: white;
    border: none;
    padding: 10px 18px;
    border-radius: 12px;
    font-weight: 700;
    cursor: pointer;
    box-shadow: 0 4px 14px rgba(0,0,0,0.2);
}

.btn.secondary {
    background: transparent;
    color: #333;
    border: 1px solid rgba(0,0,0,0.08);
}

.menu-hint {
    font-size: 0.8rem;
    color: rgba(0,0,0,0.6);
    text-align: center;
    margin-top: 6px;
}

/* Player box slider (visual) */
.player-box-slider {
    display: flex;
    gap: 8px; /* small distance between elements */
    align-items: center;
    padding: 8px;
    background: var(--cell-bg);
    border-radius: 12px;
    border: 1px solid rgba(0,0,0,0.06);
    width: 100%;
}

.player-box-slider .box {
    flex: 1 1 0; /* evenly distribute across the parent width */
    aspect-ratio: 1 / 1; /* keep squares */
    border-radius: 25%; /* proportional rounding that scales with box size */
    box-shadow: 0 4px 10px rgba(0,0,0,0.12);
    /* default background is the lighter 'cell' color for this box */
    background: var(--box-cell, #ccc);
    transition: transform .12s ease, opacity .12s ease, box-shadow .12s ease;
    border: 2px solid rgba(255,255,255,0.6);
    -webkit-user-drag: none;
    user-select: none;
    touch-action: none; /* allow pointer events without default gestures */
}

.player-box-slider .box.active {
    transform: translateY(-18%) scale(1.06); /* lift proportional to height */
    /* active boxes use the inner circle (strong) color */
    background: var(--box-inner, #999);
    box-shadow: 0 8px 20px rgba(0,0,0,0.18);
}
/* #endregion */


/* #region Game Styles */
/* grid-size slider track coloring using CSS variable */
.grid-size { display: none; }


.grid {
    display: grid;
    grid-template-columns: repeat(var(--grid-size), 1fr);
    gap: calc(50vmin / (var(--grid-size) * 8));
    margin: auto;
}

.cell {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: calc((95vmin - (var(--grid-size) - 1) * (100vmin / (var(--grid-size) * 8))) / var(--grid-size));
    height: calc((95vmin - (var(--grid-size) - 1) * (100vmin / (var(--grid-size) * 8))) / var(--grid-size));
    background-color: var(--cell-bg);
    border-radius: 25%;
    transition: background-color var(--delay-animation);
}

.inner-circle {
    position: absolute;
    width: 75%;
    height: 75%;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    transition: transform var(--delay-animation) ease-in-out, background-color var(--delay-animation) ease-in-out, opacity var(--delay-explosion) ease-out;
}

.inner-circle.fade-out {
    opacity: 0.0;
}

.inner-circle.animated {
    transition: transform var(--delay-explosion) ease-out, opacity var(--delay-explosion) ease-out; /* Add opacity transition */
}

@keyframes moveAnimation {
    0% { transform: translate(0, 0); }
    100% { /* Final position is set in JS */ }
}

.value-circle {
    position: absolute;
    width: 20%;
    height: 20%;
    background-color: #fff;
    border-radius: 50%;
    z-index: 3; /* Above inner circles */
    /* Use CSS variables for proportional translation */
    transform: translate(calc(var(--tx, 0) * 1%), calc(var(--ty, 0) * 1%));
    transition:
        transform var(--delay-animation) ease,
        opacity var(--delay-animation) ease;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Player Colors for Cells (Pastel) (use JS-set CSS variables) */
.cell.red { background-color: var(--cell-red) !important; }
.cell.orange { background-color: var(--cell-orange) !important; }
.cell.yellow { background-color: var(--cell-yellow) !important; }
.cell.green { background-color: var(--cell-green) !important; }
.cell.cyan { background-color: var(--cell-cyan) !important; }
.cell.blue { background-color: var(--cell-blue) !important; }
.cell.purple { background-color: var(--cell-purple) !important; }
.cell.magenta { background-color: var(--cell-magenta) !important; }

.cell.invalid { background-color: #b8beac; }
.cell.hidden { background-color: var(--cell-bg) !important;}

/* Player Colors for Inner Circles (Strong) (use JS-set CSS variables) */
.inner-circle.red { background-color: var(--inner-red); }
.inner-circle.orange { background-color: var(--inner-orange); }
.inner-circle.yellow { background-color: var(--inner-yellow); }
.inner-circle.green { background-color: var(--inner-green); }
.inner-circle.cyan { background-color: var(--inner-cyan); }
.inner-circle.blue { background-color: var(--inner-blue); }
.inner-circle.purple { background-color: var(--inner-purple); }
.inner-circle.magenta { background-color: var(--inner-magenta); }

/* Body Colors (Strong) (use JS-set CSS variables) */
body.red { background-color: var(--body-red); }
body.orange { background-color: var(--body-orange); }
body.yellow { background-color: var(--body-yellow); }
body.green { background-color: var(--body-green); }
body.cyan { background-color: var(--body-cyan); }
body.blue { background-color: var(--body-blue); }
body.purple { background-color: var(--body-purple); }
body.magenta { background-color: var(--body-magenta); }
/* #endregion */